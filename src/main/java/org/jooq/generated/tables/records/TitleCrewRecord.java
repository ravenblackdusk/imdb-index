/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.generated.tables.TitleCrew;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TitleCrewRecord extends UpdatableRecordImpl<TitleCrewRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.TITLE_CREW.TCONST</code>.
     */
    public void setTconst(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.TITLE_CREW.TCONST</code>.
     */
    public String getTconst() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.TITLE_CREW.DIRECTORS</code>.
     */
    public void setDirectors(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.TITLE_CREW.DIRECTORS</code>.
     */
    public String getDirectors() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.TITLE_CREW.WRITERS</code>.
     */
    public void setWriters(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.TITLE_CREW.WRITERS</code>.
     */
    public String getWriters() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TitleCrew.TITLE_CREW.TCONST;
    }

    @Override
    public Field<String> field2() {
        return TitleCrew.TITLE_CREW.DIRECTORS;
    }

    @Override
    public Field<String> field3() {
        return TitleCrew.TITLE_CREW.WRITERS;
    }

    @Override
    public String component1() {
        return getTconst();
    }

    @Override
    public String component2() {
        return getDirectors();
    }

    @Override
    public String component3() {
        return getWriters();
    }

    @Override
    public String value1() {
        return getTconst();
    }

    @Override
    public String value2() {
        return getDirectors();
    }

    @Override
    public String value3() {
        return getWriters();
    }

    @Override
    public TitleCrewRecord value1(String value) {
        setTconst(value);
        return this;
    }

    @Override
    public TitleCrewRecord value2(String value) {
        setDirectors(value);
        return this;
    }

    @Override
    public TitleCrewRecord value3(String value) {
        setWriters(value);
        return this;
    }

    @Override
    public TitleCrewRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TitleCrewRecord
     */
    public TitleCrewRecord() {
        super(TitleCrew.TITLE_CREW);
    }

    /**
     * Create a detached, initialised TitleCrewRecord
     */
    public TitleCrewRecord(String tconst, String directors, String writers) {
        super(TitleCrew.TITLE_CREW);

        setTconst(tconst);
        setDirectors(directors);
        setWriters(writers);
        resetChangedOnNotNull();
    }
}
