/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.generated.tables.NameBasics;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NameBasicsRecord extends UpdatableRecordImpl<NameBasicsRecord> implements Record6<String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.NAME_BASICS.NCONST</code>.
     */
    public void setNconst(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.NAME_BASICS.NCONST</code>.
     */
    public String getNconst() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.NAME_BASICS.PRIMARY_NAME</code>.
     */
    public void setPrimaryName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.NAME_BASICS.PRIMARY_NAME</code>.
     */
    public String getPrimaryName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.NAME_BASICS.BIRTH_YEAR</code>.
     */
    public void setBirthYear(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.NAME_BASICS.BIRTH_YEAR</code>.
     */
    public String getBirthYear() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.NAME_BASICS.DEATH_YEAR</code>.
     */
    public void setDeathYear(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.NAME_BASICS.DEATH_YEAR</code>.
     */
    public String getDeathYear() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.NAME_BASICS.PRIMARY_PROFESSION</code>.
     */
    public void setPrimaryProfession(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.NAME_BASICS.PRIMARY_PROFESSION</code>.
     */
    public String getPrimaryProfession() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.NAME_BASICS.KNOWN_FOR_TITLES</code>.
     */
    public void setKnownForTitles(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.NAME_BASICS.KNOWN_FOR_TITLES</code>.
     */
    public String getKnownForTitles() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return NameBasics.NAME_BASICS.NCONST;
    }

    @Override
    public Field<String> field2() {
        return NameBasics.NAME_BASICS.PRIMARY_NAME;
    }

    @Override
    public Field<String> field3() {
        return NameBasics.NAME_BASICS.BIRTH_YEAR;
    }

    @Override
    public Field<String> field4() {
        return NameBasics.NAME_BASICS.DEATH_YEAR;
    }

    @Override
    public Field<String> field5() {
        return NameBasics.NAME_BASICS.PRIMARY_PROFESSION;
    }

    @Override
    public Field<String> field6() {
        return NameBasics.NAME_BASICS.KNOWN_FOR_TITLES;
    }

    @Override
    public String component1() {
        return getNconst();
    }

    @Override
    public String component2() {
        return getPrimaryName();
    }

    @Override
    public String component3() {
        return getBirthYear();
    }

    @Override
    public String component4() {
        return getDeathYear();
    }

    @Override
    public String component5() {
        return getPrimaryProfession();
    }

    @Override
    public String component6() {
        return getKnownForTitles();
    }

    @Override
    public String value1() {
        return getNconst();
    }

    @Override
    public String value2() {
        return getPrimaryName();
    }

    @Override
    public String value3() {
        return getBirthYear();
    }

    @Override
    public String value4() {
        return getDeathYear();
    }

    @Override
    public String value5() {
        return getPrimaryProfession();
    }

    @Override
    public String value6() {
        return getKnownForTitles();
    }

    @Override
    public NameBasicsRecord value1(String value) {
        setNconst(value);
        return this;
    }

    @Override
    public NameBasicsRecord value2(String value) {
        setPrimaryName(value);
        return this;
    }

    @Override
    public NameBasicsRecord value3(String value) {
        setBirthYear(value);
        return this;
    }

    @Override
    public NameBasicsRecord value4(String value) {
        setDeathYear(value);
        return this;
    }

    @Override
    public NameBasicsRecord value5(String value) {
        setPrimaryProfession(value);
        return this;
    }

    @Override
    public NameBasicsRecord value6(String value) {
        setKnownForTitles(value);
        return this;
    }

    @Override
    public NameBasicsRecord values(String value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NameBasicsRecord
     */
    public NameBasicsRecord() {
        super(NameBasics.NAME_BASICS);
    }

    /**
     * Create a detached, initialised NameBasicsRecord
     */
    public NameBasicsRecord(String nconst, String primaryName, String birthYear, String deathYear, String primaryProfession, String knownForTitles) {
        super(NameBasics.NAME_BASICS);

        setNconst(nconst);
        setPrimaryName(primaryName);
        setBirthYear(birthYear);
        setDeathYear(deathYear);
        setPrimaryProfession(primaryProfession);
        setKnownForTitles(knownForTitles);
        resetChangedOnNotNull();
    }
}
