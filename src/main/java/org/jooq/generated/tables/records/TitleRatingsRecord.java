/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.generated.tables.TitleRatings;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TitleRatingsRecord extends UpdatableRecordImpl<TitleRatingsRecord> implements Record3<String, Double, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.TITLE_RATINGS.TCONST</code>.
     */
    public void setTconst(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.TITLE_RATINGS.TCONST</code>.
     */
    public String getTconst() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.TITLE_RATINGS.AVERAGE_RATING</code>.
     */
    public void setAverageRating(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.TITLE_RATINGS.AVERAGE_RATING</code>.
     */
    public Double getAverageRating() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>PUBLIC.TITLE_RATINGS.NUM_VOTES</code>.
     */
    public void setNumVotes(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.TITLE_RATINGS.NUM_VOTES</code>.
     */
    public Integer getNumVotes() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Double, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Double, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TitleRatings.TITLE_RATINGS.TCONST;
    }

    @Override
    public Field<Double> field2() {
        return TitleRatings.TITLE_RATINGS.AVERAGE_RATING;
    }

    @Override
    public Field<Integer> field3() {
        return TitleRatings.TITLE_RATINGS.NUM_VOTES;
    }

    @Override
    public String component1() {
        return getTconst();
    }

    @Override
    public Double component2() {
        return getAverageRating();
    }

    @Override
    public Integer component3() {
        return getNumVotes();
    }

    @Override
    public String value1() {
        return getTconst();
    }

    @Override
    public Double value2() {
        return getAverageRating();
    }

    @Override
    public Integer value3() {
        return getNumVotes();
    }

    @Override
    public TitleRatingsRecord value1(String value) {
        setTconst(value);
        return this;
    }

    @Override
    public TitleRatingsRecord value2(Double value) {
        setAverageRating(value);
        return this;
    }

    @Override
    public TitleRatingsRecord value3(Integer value) {
        setNumVotes(value);
        return this;
    }

    @Override
    public TitleRatingsRecord values(String value1, Double value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TitleRatingsRecord
     */
    public TitleRatingsRecord() {
        super(TitleRatings.TITLE_RATINGS);
    }

    /**
     * Create a detached, initialised TitleRatingsRecord
     */
    public TitleRatingsRecord(String tconst, Double averageRating, Integer numVotes) {
        super(TitleRatings.TITLE_RATINGS);

        setTconst(tconst);
        setAverageRating(averageRating);
        setNumVotes(numVotes);
        resetChangedOnNotNull();
    }
}
